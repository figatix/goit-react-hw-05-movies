{"version":3,"file":"static/js/869.b42ca5a5.chunk.js","mappings":"2UAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCACHC,EAAiB,8BAEjBC,EAAgB,mCAAG,sGACPH,EAAAA,EAAAA,IAAA,sBAAiC,CACtDI,OAAQ,CACNC,QAASJ,EACTK,KAAM,KAJoB,uBACtBC,EADsB,EACtBA,KADsB,kBAOvBA,GAPuB,2CAAH,qDAWhBC,EAAW,mCAAG,WAAOC,GAAP,8FAAcH,EAAd,+BAAqB,EAArB,SACFN,EAAAA,EAAAA,IAAU,gBAAiB,CAChDI,OAAQ,CACNC,QAASJ,EACTQ,MAAAA,EACAH,KAAAA,KALqB,uBACjBC,EADiB,EACjBA,KADiB,kBAQlBA,GARkB,2CAAH,sDAWXG,EAAe,mCAAG,WAAOC,GAAP,yFACNX,EAAAA,EAAAA,IAAA,iBAAoBW,GAAM,CAC/CP,OAAQ,CACNC,QAASJ,KAHgB,uBACrBM,EADqB,EACrBA,KADqB,kBAMtBA,GANsB,2CAAH,sDASfK,EAAe,mCAAG,WAAOD,GAAP,yFACNX,EAAAA,EAAAA,IAAA,iBAAoBW,EAApB,YAAkC,CACvDP,OAAQ,CACNC,QAASJ,KAHgB,uBACrBM,EADqB,EACrBA,KADqB,kBAMtBA,GANsB,2CAAH,sDASfM,EAAe,mCAAG,WAAOF,GAAP,yFACNX,EAAAA,EAAAA,IAAA,iBAAoBW,EAApB,YAAkC,CACvDP,OAAQ,CACNC,QAASJ,KAHgB,uBACrBM,EADqB,EACrBA,KADqB,kBAMtBA,GANsB,2CAAH,qD,oLC5CfO,EAAmBC,EAAAA,GAAAA,IAAH,4CAIhBC,EAAaD,EAAAA,GAAAA,GAAH,0EAMVE,EAAaF,EAAAA,GAAAA,GAAH,gDAIVG,EAAeH,EAAAA,GAAAA,GAAH,sEAKZI,EAAgBJ,EAAAA,GAAAA,EAAH,8C,SC0B1B,EAtCqB,WACnB,OAA8BK,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAcC,EAAAA,EAAAA,MAAdD,WAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,WAAOC,GAAP,mGAESd,EAAAA,EAAAA,IAAgBc,GAFzB,gBAETC,EAFS,EAETA,QACRN,EAAWM,GAHM,gDAKjBC,QAAQC,IAAR,MACAC,EAAAA,GAAAA,MAAY,KAAIC,SANC,yDAAH,sDAUlBN,EAAaH,EACd,GAAE,CAACA,IAEJ,IAAMU,EAA+B,IAAnBZ,EAAQa,OAE1B,OACE,SAACpB,EAAD,UACGmB,GACC,SAACjB,EAAD,UACGK,EAAQc,KAAI,gBAAGxB,EAAH,EAAGA,GAAIyB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,UAACpB,EAAD,YACE,SAACC,EAAD,UAAekB,KACf,SAACjB,EAAD,UAAgBkB,MAFD1B,EADN,OAQf,sEAIP,C","sources":["components/utils/ApiMovies.jsx","pages/MovieReviews/MovieReviews.styled.js","pages/MovieReviews/MovieReviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'c0f6c237cceca90b2071a7042fc52b4a';\nexport const IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/';\n\nexport const getPopularMovies = async () => {\n  const { data } = await axios.get(`/trending/movie/day`, {\n    params: {\n      api_key: API_KEY,\n      page: 1,\n    }\n  })\n  return data;\n}\n\n\nexport const searchMovie = async (query, page = 1) => {\n  const { data } = await axios.get('/search/movie', {\n    params: {\n      api_key: API_KEY,\n      query,\n      page,\n    }\n  })\n  return data\n}\n\nexport const getMovieDetails = async (id) => {\n  const { data } = await axios.get(`/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    }\n  })\n  return data;\n}\n\nexport const getMovieCredits = async (id) => {\n  const { data } = await axios.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    }\n  })\n  return data;\n}\n\nexport const getMovieReviews = async (id) => {\n  const { data } = await axios.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    }\n  })\n  return data;\n}\n","import styled from 'styled-components';\n\nexport const ReviewsContainer = styled.div`\n  padding: 0 30px;\n`;\n\nexport const ReviewList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const ReviewItem = styled.li`\n  margin-bottom: 2rem;\n`;\n\nexport const ReviewAuthor = styled.h4`\n  font-size: 1.5rem;\n  margin-bottom: 1rem;\n`;\n\nexport const ReviewContent = styled.p`\n  font-size: 1.2rem;\n`;\n","\n\nimport { getMovieReviews } from \"components/utils/ApiMovies\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { ReviewAuthor, ReviewContent, ReviewItem, ReviewList, ReviewsContainer } from \"./MovieReviews.styled\";\n\n\nconst MovieReviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { detailsId } = useParams();\n\n  useEffect(() => {\n    const fetchReviews = async (idFilm) => {\n      try {\n        const { results } = await getMovieReviews(idFilm);\n        setReviews(results);\n      } catch (err) {\n        console.log(err);\n        toast.error(err.message)\n      }\n    };\n\n    fetchReviews(detailsId);\n  }, [detailsId]);\n\n  const isReviews = reviews.length !== 0;\n\n  return (\n    <ReviewsContainer>\n      {isReviews ? (\n        <ReviewList>\n          {reviews.map(({ id, author, content }) => (\n            <ReviewItem key={id}>\n              <ReviewAuthor>{author}</ReviewAuthor>\n              <ReviewContent>{content}</ReviewContent>\n            </ReviewItem>\n          ))}\n        </ReviewList>\n      ) : (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n    </ReviewsContainer>\n  );\n};\n\nexport default MovieReviews;\n"],"names":["axios","API_KEY","IMAGE_BASE_URL","getPopularMovies","params","api_key","page","data","searchMovie","query","getMovieDetails","id","getMovieCredits","getMovieReviews","ReviewsContainer","styled","ReviewList","ReviewItem","ReviewAuthor","ReviewContent","useState","reviews","setReviews","detailsId","useParams","useEffect","fetchReviews","idFilm","results","console","log","toast","message","isReviews","length","map","author","content"],"sourceRoot":""}